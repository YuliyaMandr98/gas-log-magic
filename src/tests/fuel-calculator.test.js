// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const BASE_CONSUMPTION = 25.5;
const HEAD_CONSUMPTION = 23;
const REF_CONSUMPTION = 2;

// –§—É–Ω–∫—Ü–∏–∏ —Ä–∞—Å—á–µ—Ç–∞
function calculateFuelConsumption(distance, loadType, weight, coefficient) {
  if (loadType === 'head') {
    return (distance * HEAD_CONSUMPTION) / 100;
  }
  
  let consumptionPer100km = BASE_CONSUMPTION;
  
  if (loadType === 'loaded' && weight && coefficient) {
    const additionalConsumption = (weight * coefficient) / 1000;
    consumptionPer100km = BASE_CONSUMPTION + additionalConsumption;
  }
  
  return (distance * consumptionPer100km) / 100;
}

// –¢–µ—Å—Ç—ã
console.log('üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —Ä–∞—Å—Ö–æ–¥–∞ —Ç–æ–ø–ª–∏–≤–∞...\n');

// –¢–µ—Å—Ç 1: –ü—É—Å—Ç–∞—è –ø–æ–µ–∑–¥–∫–∞
const test1 = calculateFuelConsumption(100, 'empty');
console.log(`‚úÖ –¢–µ—Å—Ç 1 - –ü—É—Å—Ç–∞—è –ø–æ–µ–∑–¥–∫–∞ (100–∫–º): ${test1} –ª (–æ–∂–∏–¥–∞–µ—Ç—Å—è: 25.5)`);
console.assert(test1 === 25.5, '–û—à–∏–±–∫–∞ –≤ —Ä–∞—Å—á–µ—Ç–µ –ø—É—Å—Ç–æ–π –ø–æ–µ–∑–¥–∫–∏');

// –¢–µ—Å—Ç 2: –ì–æ–ª–æ–≤–∞
const test2 = calculateFuelConsumption(100, 'head');
console.log(`‚úÖ –¢–µ—Å—Ç 2 - –ì–æ–ª–æ–≤–∞ (100–∫–º): ${test2} –ª (–æ–∂–∏–¥–∞–µ—Ç—Å—è: 23)`);
console.assert(test2 === 23, '–û—à–∏–±–∫–∞ –≤ —Ä–∞—Å—á–µ—Ç–µ –ø–æ–µ–∑–¥–∫–∏ –Ω–∞ –≥–æ–ª–æ–≤–µ');

// –¢–µ—Å—Ç 3: –ì—Ä—É–∂–µ–Ω–∞—è –ø–æ–µ–∑–¥–∫–∞
const test3 = calculateFuelConsumption(100, 'loaded', 10000, 0.35);
console.log(`‚úÖ –¢–µ—Å—Ç 3 - –ì—Ä—É–∂–µ–Ω–∞—è –ø–æ–µ–∑–¥–∫–∞ (100–∫–º, 10—Ç): ${test3} –ª (–æ–∂–∏–¥–∞–µ—Ç—Å—è: 29)`);
console.assert(test3 === 29, '–û—à–∏–±–∫–∞ –≤ —Ä–∞—Å—á–µ—Ç–µ –≥—Ä—É–∂–µ–Ω–æ–π –ø–æ–µ–∑–¥–∫–∏');

// –¢–µ—Å—Ç 4: –†–∞–∑–Ω—ã–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è
const test4a = calculateFuelConsumption(50, 'empty');
const test4b = calculateFuelConsumption(200, 'empty');
const test4c = calculateFuelConsumption(150, 'head');
console.log(`‚úÖ –¢–µ—Å—Ç 4a - –ü—É—Å—Ç–∞—è 50–∫–º: ${test4a} –ª (–æ–∂–∏–¥–∞–µ—Ç—Å—è: 12.75)`);
console.log(`‚úÖ –¢–µ—Å—Ç 4b - –ü—É—Å—Ç–∞—è 200–∫–º: ${test4b} –ª (–æ–∂–∏–¥–∞–µ—Ç—Å—è: 51)`);
console.log(`‚úÖ –¢–µ—Å—Ç 4c - –ì–æ–ª–æ–≤–∞ 150–∫–º: ${test4c} –ª (–æ–∂–∏–¥–∞–µ—Ç—Å—è: 34.5)`);
console.assert(test4a === 12.75, '–û—à–∏–±–∫–∞ –≤ —Ä–∞—Å—á–µ—Ç–µ 50–∫–º –ø—É—Å—Ç–æ–π');
console.assert(test4b === 51, '–û—à–∏–±–∫–∞ –≤ —Ä–∞—Å—á–µ—Ç–µ 200–∫–º –ø—É—Å—Ç–æ–π');
console.assert(test4c === 34.5, '–û—à–∏–±–∫–∞ –≤ —Ä–∞—Å—á–µ—Ç–µ 150–∫–º –≥–æ–ª–æ–≤–∞');

// –¢–µ—Å—Ç 5: –†–µ—Ñ—Ä–∏–∂–µ—Ä–∞—Ç–æ—Ä
const refTest1 = 5 * REF_CONSUMPTION;
const refTest2 = 8 * REF_CONSUMPTION;
console.log(`‚úÖ –¢–µ—Å—Ç 5a - –†–µ—Ñ 5—á: ${refTest1} –ª (–æ–∂–∏–¥–∞–µ—Ç—Å—è: 10)`);
console.log(`‚úÖ –¢–µ—Å—Ç 5b - –†–µ—Ñ 8—á: ${refTest2} –ª (–æ–∂–∏–¥–∞–µ—Ç—Å—è: 16)`);
console.assert(refTest1 === 10, '–û—à–∏–±–∫–∞ –≤ —Ä–∞—Å—á–µ—Ç–µ —Ä–µ—Ñ—Ä–∏–∂–µ—Ä–∞—Ç–æ—Ä–∞ 5—á');
console.assert(refTest2 === 16, '–û—à–∏–±–∫–∞ –≤ —Ä–∞—Å—á–µ—Ç–µ —Ä–µ—Ñ—Ä–∏–∂–µ—Ä–∞—Ç–æ—Ä–∞ 8—á');

// –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç
const trips = [
  { distance: 100, loadType: 'empty' },
  { distance: 150, loadType: 'loaded', weight: 5000, coefficient: 0.35 },
  { distance: 80, loadType: 'head' }
];

const totalTripFuel = trips.reduce((sum, trip) => {
  return sum + calculateFuelConsumption(trip.distance, trip.loadType, trip.weight, trip.coefficient);
}, 0);

console.log(`‚úÖ –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç - –û–±—â–∏–π —Ä–∞—Å—Ö–æ–¥: ${totalTripFuel.toFixed(3)} –ª (–æ–∂–∏–¥–∞–µ—Ç—Å—è: ~84.775)`);
console.assert(Math.abs(totalTripFuel - 84.775) < 0.001, '–û—à–∏–±–∫–∞ –≤ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–º —Ä–∞—Å—á–µ—Ç–µ');

console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');